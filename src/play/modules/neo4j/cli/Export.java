package play.modules.neo4j.cli;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.neo4j.graphdb.Node;

import play.Play;
import play.modules.neo4j.cli.export.YmlNode;
import play.modules.neo4j.util.Neo4j;

public class Export {

    public static Map<String, YmlNode> nodes     = (Map<String, YmlNode>) Collections
                                                         .synchronizedMap(new HashMap<String, YmlNode>());

    public static Map<String, String>  relations = (Map<String, String>) Collections
                                                         .synchronizedMap(new HashMap<String, String>());

    /**
     * Export YML file method !
     * 
     * @param args
     * @throws Exception
     */
    public static void main(String[] args) throws Exception {
        // initiate play! framework
        File root = new File(System.getProperty("application.path"));
        Play.init(root, System.getProperty("play.id", ""));
        // initiate DB
        Neo4j.initialize();

        // we retrieve parameters
        String filename = "data";
        String output = "conf/";
        for (int i = 0; i < args.length; i++) {
            if (args[i].startsWith("--")) {
                if (args[i].startsWith("--filename=")) {
                    filename = args[i].substring(11);
                }
                if (args[i].startsWith("--output=")) {
                    output = args[i].substring(9);
                }
            }
        }
        mainWork(filename, output);

    }

    public static void mainWork(String filename, String output) throws Exception {
        // for all node
        for (Node node : Neo4j.db().getAllNodes()) {
            YmlNode ymlNode = new YmlNode(node);
            nodes.put(ymlNode.id, ymlNode);
        }
    }

    /**
     * Method that generate the YLM file.
     * 
     * @param output
     * @param filename
     * @param myHash
     * @throws IOException
     */
    private static void writeFile(String output, String filename) throws IOException {
        // we create the file
        File file = new File(output + "/" + filename + ".yml");
        FileOutputStream fop = new FileOutputStream(file);
        fop.write("# Generated by logisima-play-neo4j (http://github.com/sim51/logisima-play-neo4j).\n".getBytes());
        fop.write("# This module is a part of LogiSima (http://www.logisima.com).\n".getBytes());
        fop.flush();
        fop.close();
    }
}
